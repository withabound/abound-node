on:
  release:
    types:
      - published

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  publish_release:
    runs-on: ubuntu-latest
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
          channel: "#deployments"
        if: always()

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Validate release version and package version match
        env:
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          if ! grep -q "\"version\": \"${RELEASE_TAG_NAME:1}\"" package.json
            then
              echo "Release tag (${RELEASE_TAG_NAME:1}) does not match the package.json version"
              exit 1
            else
              echo "Release tag matches the package.json version"
          fi

      - name: Setup Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14"
          registry-url: "https://registry.npmjs.org/"

      - name: Install npm dependencies
        run: npm ci

      - name: Publish @withabound/node-sdk
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: "#deployments"
        if: always()

  slack_notification:
    runs-on: ubuntu-latest
    needs: publish_release
    steps:
      - uses: tokorom/action-slack-incoming-webhook@main
        with:
          text: "@withabound/node-sdk@${RELEASE_TAG_NAME:1} has been published."
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SUCCESS_DEPLOYMENT_DX_URL }}
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
