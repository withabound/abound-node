/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Abound from "../../src/api/index";
import { AboundClient } from "../../src/Client";

const client = new AboundClient({
    environment: process.env.TESTS_BASE_URL || "test",
    token: process.env.TESTS_AUTH || "test",
});

describe("Users", () => {
    test("list", async () => {
        const response = await client.users.list();
        expect(response).toEqual([
            {
                email: "your-users-email@domain.com",
                foreignId: "your-foreign-id",
                metadata: { key: "value" },
                id: "userId_sampleXGMFnhOpeR",
                createdAt: new Date("2024-01-01T00:00:00.000Z"),
            },
        ]);
    });

    test("create", async () => {
        const response = await client.users.create({
            "Idempotency-Key": "9f86d081884c7d659a2feaa0c55ad015a3bf4f1b2b0b822cd15d6c15b0f00a08",
            body: {},
        });
        expect(response).toEqual({
            email: "your-users-email@domain.com",
            foreignId: "your-foreign-id",
            metadata: { key: "value" },
            id: "userId_sampleXGMFnhOpeR",
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
        });
    });

    test("retrieve", async () => {
        const response = await client.users.retrieve("{{userId}}");
        expect(response).toEqual({
            email: "your-users-email@domain.com",
            foreignId: "your-foreign-id",
            metadata: { key: "value" },
            id: "userId_sampleXGMFnhOpeR",
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
        });
    });

    test("update", async () => {
        const response = await client.users.update("{{userId}}", {});
        expect(response).toEqual({
            email: "your-users-email@domain.com",
            foreignId: "your-foreign-id",
            metadata: { key: "value" },
            id: "userId_sampleXGMFnhOpeR",
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
        });
    });
});
